{
  "version": "15.0.4",
  "vulnerabilities": [
    {
      "id": ":SKIP:",
      "category": "sast",
      "message": "Improper limitation of a pathname to a restricted directory ('Path Traversal')",
      "description": "The application dynamically constructs file or path information. If the path\ninformation comes from user input, it could be abused to read sensitive files,\naccess other users data, or aid in exploitation to gain further system access.\n\nUser input should never be used in constructing paths or files for interacting\nwith the filesystem. This includes filenames supplied by user uploads or downloads.\nI",
      "cve": "semgrep_id:security_code_scan.SCS0018:52:52",
      "severity": "Medium",
      "scanner": {
        "id": "semgrep",
        "name": "Semgrep"
      },
      "location": {
        "file": "WebApp/Controllers/HomeController.cs",
        "start_line": 52
      },
      "identifiers": [
        {
          "type": "semgrep_id",
          "name": "security_code_scan.SCS0018",
          "value": "security_code_scan.SCS0018"
        },
        {
          "type": "cwe",
          "name": "CWE-22",
          "value": "22",
          "url": "https://cwe.mitre.org/data/definitions/22.html"
        },
        {
          "type": "security_code_scan_rule_id",
          "name": "SCS0018",
          "value": "SCS0018"
        }
      ],
      "tracking": {
        "type": "source",
        "items": [
          {
            "file": "WebApp/Controllers/HomeController.cs",
            "line_start": 52,
            "line_end": 52,
            "signatures": [
              {
                "algorithm": "scope_offset",
                "value": "WebApp/Controllers/HomeController.cs|HomeController[0]|IActionResult[5]:2"
              }
            ]
          }
        ]
      }
    },
    {
      "id": ":SKIP:",
      "category": "sast",
      "message": "Incorrect Regular Expression",
      "description": "RegExp() called with a variable, this might allow an attacker to DOS your application with a\nlong-running regular expression.\n",
      "cve": "semgrep_id:eslint.detect-non-literal-regexp:345:345",
      "severity": "Medium",
      "scanner": {
        "id": "semgrep",
        "name": "Semgrep"
      },
      "location": {
        "file": "WebApp/wwwroot/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js",
        "start_line": 345
      },
      "identifiers": [
        {
          "type": "semgrep_id",
          "name": "eslint.detect-non-literal-regexp",
          "value": "eslint.detect-non-literal-regexp",
          "url": "https://semgrep.dev/r/gitlab.eslint.detect-non-literal-regexp"
        },
        {
          "type": "cwe",
          "name": "CWE-185",
          "value": "185",
          "url": "https://cwe.mitre.org/data/definitions/185.html"
        },
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID/detect-non-literal-regexp",
          "value": "detect-non-literal-regexp"
        }
      ]
    },
    {
      "id": ":SKIP:",
      "category": "sast",
      "message": "Improper Control of Generation of Code ('Code Injection')",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all\nproperties of the object and even it's prototype, leading to possible code execution.\n",
      "cve": "semgrep_id:eslint.detect-object-injection:129:129",
      "severity": "Medium",
      "scanner": {
        "id": "semgrep",
        "name": "Semgrep"
      },
      "location": {
        "file": "WebApp/wwwroot/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js",
        "start_line": 129
      },
      "identifiers": [
        {
          "type": "semgrep_id",
          "name": "eslint.detect-object-injection",
          "value": "eslint.detect-object-injection",
          "url": "https://semgrep.dev/r/gitlab.eslint.detect-object-injection"
        },
        {
          "type": "cwe",
          "name": "CWE-94",
          "value": "94",
          "url": "https://cwe.mitre.org/data/definitions/94.html"
        },
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID/detect-object-injection",
          "value": "detect-object-injection"
        }
      ]
    },
    {
      "id": ":SKIP:",
      "category": "sast",
      "message": "Use of cryptographically weak Pseudo-Random Number Generator (PRNG)",
      "description": "Depending on the context, generating weak random numbers may expose cryptographic functions\nwhich rely on these numbers to be exploitable. When generating numbers for sensitive values\nsuch as tokens, nonces, and cryptographic keys, it is recommended that the\n`RandomNumberGenerator` class be used.\n\nExample `RandomNumberGenerator` usage:\n```\nInt32 randInt = RandomNumberGenerator.GetInt32(32000);\nbyt",
      "cve": "semgrep_id:security_code_scan.SCS0005:11:11",
      "severity": "Medium",
      "scanner": {
        "id": "semgrep",
        "name": "Semgrep"
      },
      "location": {
        "file": "WebLib/GetRandom.cs",
        "start_line": 11
      },
      "identifiers": [
        {
          "type": "semgrep_id",
          "name": "security_code_scan.SCS0005",
          "value": "security_code_scan.SCS0005"
        },
        {
          "type": "cwe",
          "name": "CWE-338",
          "value": "338",
          "url": "https://cwe.mitre.org/data/definitions/338.html"
        },
        {
          "type": "security_code_scan_rule_id",
          "name": "SCS0005",
          "value": "SCS0005"
        }
      ],
      "tracking": {
        "type": "source",
        "items": [
          {
            "file": "WebLib/GetRandom.cs",
            "line_start": 11,
            "line_end": 11,
            "signatures": [
              {
                "algorithm": "scope_offset",
                "value": "WebLib/GetRandom.cs|WebLib[0]|GetRandom[0]|RandomNumber[0]:4"
              }
            ]
          }
        ]
      }
    }
  ],
  "dependency_files": [],
  "scan": {
    "analyzer": {
      "id": "semgrep",
      "name": "Semgrep",
      "url": "https://gitlab.com/gitlab-org/security-products/analyzers/semgrep",
      "vendor": {
        "name": "GitLab"
      },
      "version": ":SKIP:"
    },
    "scanner": {
      "id": "semgrep",
      "name": "Semgrep",
      "url": "https://github.com/returntocorp/semgrep",
      "vendor": {
        "name": "GitLab"
      },
      "version": "1.17.1"
    },
    "type": "sast",
    "start_time": ":SKIP:",
    "end_time": ":SKIP:",
    "status": "success"
  }
}
