{
  "version": "15.0.4",
  "vulnerabilities": [
    {
      "id": ":SKIP:",
      "category": "sast",
      "title": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
      "description": "Detected eval(variable), which could allow a malicious actor to run arbitrary code.\n",
      "cve": "semgrep_id:eslint.detect-eval-with-expression:47:47",
      "severity": "Medium",
      "scanner": {
        "id": "semgrep",
        "name": "Semgrep"
      },
      "location": {
        "file": "src/app.tsx",
        "start_line": 47
      },
      "identifiers": [
        {
          "type": "semgrep_id",
          "name": "eslint.detect-eval-with-expression",
          "value": "eslint.detect-eval-with-expression",
          "url": "https://semgrep.dev/r/gitlab.eslint.detect-eval-with-expression"
        },
        {
          "type": "cwe",
          "name": "CWE-95",
          "value": "95",
          "url": "https://cwe.mitre.org/data/definitions/95.html"
        },
        {
          "type": "owasp",
          "name": "A1:2017 - Injection",
          "value": "A1:2017"
        },
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID/detect-eval-with-expression",
          "value": "detect-eval-with-expression"
        }
      ]
    },
    {
      "id": ":SKIP:",
      "category": "sast",
      "title": "Incorrect Regular Expression",
      "description": "RegExp() called with a variable, this might allow an attacker to DOS your application with a\nlong-running regular expression.\n",
      "cve": "semgrep_id:eslint.detect-non-literal-regexp:34:34",
      "severity": "Medium",
      "scanner": {
        "id": "semgrep",
        "name": "Semgrep"
      },
      "location": {
        "file": "src/app.tsx",
        "start_line": 34
      },
      "identifiers": [
        {
          "type": "semgrep_id",
          "name": "eslint.detect-non-literal-regexp",
          "value": "eslint.detect-non-literal-regexp",
          "url": "https://semgrep.dev/r/gitlab.eslint.detect-non-literal-regexp"
        },
        {
          "type": "cwe",
          "name": "CWE-185",
          "value": "185",
          "url": "https://cwe.mitre.org/data/definitions/185.html"
        },
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID/detect-non-literal-regexp",
          "value": "detect-non-literal-regexp"
        }
      ]
    },
    {
      "id": ":SKIP:",
      "category": "sast",
      "title": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
      "description": "Detected usage of crypto.pseudoRandomBytes, which does not produce secure random numbers.\n",
      "cve": "semgrep_id:eslint.detect-pseudoRandomBytes:41:41",
      "severity": "Medium",
      "scanner": {
        "id": "semgrep",
        "name": "Semgrep"
      },
      "location": {
        "file": "src/app.tsx",
        "start_line": 41
      },
      "identifiers": [
        {
          "type": "semgrep_id",
          "name": "eslint.detect-pseudoRandomBytes",
          "value": "eslint.detect-pseudoRandomBytes",
          "url": "https://semgrep.dev/r/gitlab.eslint.detect-pseudoRandomBytes"
        },
        {
          "type": "cwe",
          "name": "CWE-338",
          "value": "338",
          "url": "https://cwe.mitre.org/data/definitions/338.html"
        },
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID/detect-pseudoRandomBytes",
          "value": "detect-pseudoRandomBytes"
        }
      ]
    }
  ],
  "dependency_files": [],
  "scan": {
    "analyzer": {
      "id": "semgrep",
      "name": "Semgrep",
      "url": "https://gitlab.com/gitlab-org/security-products/analyzers/semgrep",
      "vendor": {
        "name": "GitLab"
      },
      "version": ":SKIP:"
    },
    "scanner": {
      "id": "semgrep",
      "name": "Semgrep",
      "url": "https://github.com/returntocorp/semgrep",
      "vendor": {
        "name": "GitLab"
      },
      "version": ":SKIP:"
    },
    "type": "sast",
    "start_time": ":SKIP:",
    "end_time": ":SKIP:",
    "status": "success"
  }
}
