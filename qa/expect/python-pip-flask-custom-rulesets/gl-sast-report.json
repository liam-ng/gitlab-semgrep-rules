{
  "version": "14.0.0",
  "vulnerabilities": [
    {
      "id": "6fa2181dd7e7e09705bae1c9182e90a018932527a9586879755772d1aa0d6f07",
      "category": "sast",
      "message": "Deserialization of Untrusted Data",
      "description": "Avoid using `load()`. `PyYAML.load` can create arbitrary Python\nobjects. A malicious actor could exploit this to run arbitrary\ncode. Use `safe_load()` instead.\n",
      "cve": "",
      "severity": "Critical",
      "scanner": {
        "id": "semgrep",
        "name": "Semgrep"
      },
      "location": {
        "file": "app/app.py",
        "start_line": 329,
        "end_line": 329
      },
      "identifiers": [
        {
          "type": "semgrep_id",
          "name": "bandit.B506",
          "value": "bandit.B506"
        },
        {
          "type": "cwe",
          "name": "CWE-502",
          "value": "502",
          "url": "https://cwe.mitre.org/data/definitions/502.html"
        },
        {
          "type": "owasp",
          "name": "Insecure Deserialization",
          "value": "A8"
        },
        {
          "type": "bandit_test_id",
          "name": "Bandit Test ID B506",
          "value": "B506"
        }
      ],
      "tracking": {
        "type": "source",
        "items": [
          {
            "file": "app/app.py",
            "line_start": 329,
            "line_end": 329,
            "signatures": [
              {
                "algorithm": "scope_offset",
                "value": "app/app.py|yaml_hammer[0]:13"
              }
            ]
          }
        ]
      }
    },
    {
      "id": "2c4efce9f31385707082dbf13961ee052089a980796ea4c0522248eae861101f",
      "category": "sast",
      "message": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
      "description": "Detected possible formatted SQL query. Use parameterized queries instead.\n",
      "cve": "",
      "severity": "Medium",
      "scanner": {
        "id": "semgrep",
        "name": "Semgrep"
      },
      "location": {
        "file": "app/app.py",
        "start_line": 265,
        "end_line": 265
      },
      "identifiers": [
        {
          "type": "semgrep_id",
          "name": "bandit.B608",
          "value": "bandit.B608"
        },
        {
          "type": "cwe",
          "name": "CWE-89",
          "value": "89",
          "url": "https://cwe.mitre.org/data/definitions/89.html"
        },
        {
          "type": "owasp",
          "name": "Injection",
          "value": "A1"
        },
        {
          "type": "bandit_test_id",
          "name": "Bandit Test ID B608",
          "value": "B608"
        }
      ],
      "tracking": {
        "type": "source",
        "items": [
          {
            "file": "app/app.py",
            "line_start": 265,
            "line_end": 265,
            "signatures": [
              {
                "algorithm": "scope_offset",
                "value": "app/app.py|search_customer[0]:18"
              }
            ]
          }
        ]
      }
    },
    {
      "id": "8ad9c94f58b5772a8d8465a56a15c01024c7ab9be38630f015fc6b266dff3dde",
      "category": "sast",
      "message": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
      "description": "Detected eval(variable), which could allow a malicious actor to run arbitrary code.\n",
      "cve": "",
      "severity": "Medium",
      "scanner": {
        "id": "semgrep",
        "name": "Semgrep"
      },
      "location": {
        "file": "app/static/main.js",
        "start_line": 10,
        "end_line": 10
      },
      "identifiers": [
        {
          "type": "semgrep_id",
          "name": "eslint.detect-eval-with-expression",
          "value": "eslint.detect-eval-with-expression"
        },
        {
          "type": "cwe",
          "name": "CWE-95",
          "value": "95",
          "url": "https://cwe.mitre.org/data/definitions/95.html"
        },
        {
          "type": "owasp",
          "name": "Injection",
          "value": "A1"
        },
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-eval-with-expression",
          "value": "security/detect-eval-with-expression"
        }
      ],
      "tracking": {
        "type": "source",
        "items": [
          {
            "file": "app/static/main.js",
            "line_start": 10,
            "line_end": 10,
            "signatures": [
              {
                "algorithm": "scope_offset",
                "value": "app/static/main.js|dangerous_eval[0]:1"
              }
            ]
          }
        ]
      }
    },
    {
      "id": "a2caf7a4a9d21a45e55fcbb07bae21013200cf81e3b155db55d51703aa044299",
      "category": "sast",
      "message": "Incorrect Regular Expression",
      "description": "RegExp() called with a variable, this might allow an attacker to DOS your application with a long-running regular expression.\n",
      "cve": "",
      "severity": "Medium",
      "scanner": {
        "id": "semgrep",
        "name": "Semgrep"
      },
      "location": {
        "file": "app/static/main.js",
        "start_line": 15,
        "end_line": 15
      },
      "identifiers": [
        {
          "type": "semgrep_id",
          "name": "eslint.detect-non-literal-regexp",
          "value": "eslint.detect-non-literal-regexp"
        },
        {
          "type": "cwe",
          "name": "CWE-185",
          "value": "185",
          "url": "https://cwe.mitre.org/data/definitions/185.html"
        },
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-non-literal-regexp",
          "value": "security/detect-non-literal-regexp"
        }
      ],
      "tracking": {
        "type": "source",
        "items": [
          {
            "file": "app/static/main.js",
            "line_start": 15,
            "line_end": 15,
            "signatures": [
              {
                "algorithm": "scope_offset",
                "value": "app/static/main.js|dangerous_regexp[0]:1"
              }
            ]
          }
        ]
      }
    },
    {
      "id": "750b8ac96be44407aa1c4162690ca32a90058da472106810a469b89a5ec39329",
      "category": "sast",
      "message": "Improper Control of Generation of Code ('Code Injection')",
      "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
      "cve": "",
      "severity": "Medium",
      "scanner": {
        "id": "semgrep",
        "name": "Semgrep"
      },
      "location": {
        "file": "app/static/main.js",
        "start_line": 27,
        "end_line": 27
      },
      "identifiers": [
        {
          "type": "semgrep_id",
          "name": "eslint.detect-object-injection",
          "value": "eslint.detect-object-injection"
        },
        {
          "type": "cwe",
          "name": "CWE-94",
          "value": "94",
          "url": "https://cwe.mitre.org/data/definitions/94.html"
        },
        {
          "type": "eslint_rule_id",
          "name": "ESLint rule ID security/detect-object-injection",
          "value": "security/detect-object-injection"
        }
      ],
      "tracking": {
        "type": "source",
        "items": [
          {
            "file": "app/static/main.js",
            "line_start": 27,
            "line_end": 27,
            "signatures": [
              {
                "algorithm": "scope_offset",
                "value": "app/static/main.js|handler[0]:2"
              }
            ]
          }
        ]
      }
    }
  ],
  "remediations": [],
  "scan": {
    "scanner": {
      "id": "semgrep",
      "name": "Semgrep",
      "url": "https://github.com/returntocorp/semgrep",
      "vendor": {
        "name": "GitLab"
      },
      "version": "0.55.1"
    },
    "type": "sast",
    "start_time": "2021-06-18T16:53:18",
    "end_time": "2021-06-18T16:53:32",
    "status": "success"
  }
}