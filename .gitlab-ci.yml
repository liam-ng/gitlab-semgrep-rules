variables:
  REPORT_FILENAME: gl-sast-report.json
  MAX_IMAGE_SIZE_MB: 200
  MAX_IMAGE_SIZE_MB_FIPS: 1090
  DS_EXCLUDED_ANALYZERS: "gemnasium-maven,gemnasium-python"
  SAST_EXCLUDED_ANALYZERS: "bandit,eslint,flawfinder,nodejs-scan,phpcs-security-audit,security-code-scan,spotbugs"
  SAST_EXCLUDED_PATHS: "qa, spec, test, tests, tmp, testdata"
  SEARCH_MAX_DEPTH: 20

include:
  - remote: https://gitlab.com/gitlab-org/security-products/ci-templates/raw/master/includes-dev/analyzer.yml
  - project: 'gitlab-org/security-products/ci-templates'
    ref: 'master'
    file: '/includes-dev/upsert-git-tag.yml'

semgrep-meta-rules:
  stage: test
  image: returntocorp/semgrep-agent:v1
  script: semgrep-agent --config p/semgrep-rule-lints
  allow_failure: true

semgrep-rules-yaml-validation:
  stage: test
  image:
    name: registry.gitlab.com/gitlab-org/security-products/analyzers/integration-test:stable
  script: for f in $(ls rules); do ruby semgrep_rules_check/find_nonmatching_rule_ids.rb rules/$f || exit 1; done

integration-test:
  image:
    name: registry.gitlab.com/gitlab-org/security-products/analyzers/integration-test:stable
  services:
    - docker:20.10-dind
  variables:
    TMP_IMAGE: $CI_REGISTRY_IMAGE/tmp:$CI_COMMIT_SHA$IMAGE_TAG_SUFFIX
  script:
    - rspec -f d
  artifacts:
    when: always
    paths:
      - tmp/**/gl-sast-report.json
    expire_in: 1 week

integration-test-fips:
  extends: integration-test
  variables:
    IMAGE_TAG_SUFFIX: "-fips"
    PRIVILEGED: 'true'

.qa-downstream-sast:
  variables:
    DS_DEFAULT_ANALYZERS: ""
    SAST_EXCLUDED_ANALYZERS: "bandit,eslint"
    SAST_EXCLUDED_PATHS: "" # TEMP: until https://gitlab.com/gitlab-org/gitlab/-/issues/223283

fp-benchmark-test:
  stage: post
  rules:
    # do not run on a pipeline triggered from a forked source
    - if: $CI_MERGE_REQUEST_SOURCE_PROJECT_PATH != $CI_MERGE_REQUEST_PROJECT_PATH
      when: never
    # do not run on a pipeline triggered on default-branch merge or tag creation
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_TAG
      when: never
    - when: manual
  variables:
    HUSH_BASELINE_IMAGE: "semgrep:4"
    HUSH_TARGET_IMAGE: "semgrep:$CI_COMMIT_BRANCH"
    HUSH_REPORT_TYPE: "sast"
    HUSH_NUM_JOBS: "100" # no of repos to run the scan
    HUSH_LANG_FILTER: "go,js,java,python,c,c#"
  trigger:
    project: gitlab-org/secure/pocs/hush
  allow_failure: true
