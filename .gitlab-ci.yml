variables:
  REPORT_FILENAME: gl-sast-report.json
  MAX_IMAGE_SIZE_MB: 200
  MAX_IMAGE_SIZE_MB_FIPS: 1090
  DS_EXCLUDED_ANALYZERS: "gemnasium-maven,gemnasium-python"
  SAST_EXCLUDED_ANALYZERS: "bandit,eslint,flawfinder,nodejs-scan,phpcs-security-audit,security-code-scan,spotbugs"
  SAST_EXCLUDED_PATHS: "qa, spec, test, tests, tmp, testdata"
  SEARCH_MAX_DEPTH: 20

include:
  - remote: https://gitlab.com/gitlab-org/security-products/ci-templates/raw/master/includes-dev/analyzer.yml

semgrep-meta-rules:
  stage: test
  image: returntocorp/semgrep-agent:v1
  script: semgrep-agent --config p/semgrep-rule-lints
  allow_failure: true

semgrep-rules-yaml-validation:
  stage: test
  image:
    name: registry.gitlab.com/gitlab-org/security-products/analyzers/integration-test:stable
  script: for f in $(ls rules); do ruby semgrep_rules_check/find_nonmatching_rule_ids.rb rules/$f || exit 1; done

integration-test:
  stage: test
  image:
    name: registry.gitlab.com/gitlab-org/security-products/analyzers/integration-test:stable
  services:
    - docker:20.10-dind
  variables:
    TMP_IMAGE: $CI_REGISTRY_IMAGE/tmp:$CI_COMMIT_SHA$IMAGE_TAG_SUFFIX
  script:
    - rspec -f d
  needs:
    - build tmp image
  artifacts:
    when: always
    paths:
      - tmp/**/gl-sast-report.json
    expire_in: 1 week

integration-test-fips:
  extends: integration-test
  variables:
    IMAGE_TAG_SUFFIX: "-fips"
    PRIVILEGED: 'true'
  needs:
    - build tmp image fips

.qa-downstream-sast:
  variables:
    DS_DEFAULT_ANALYZERS: ""
    SAST_EXCLUDED_ANALYZERS: "bandit,eslint"
    SAST_EXCLUDED_PATHS: "" # TEMP: until https://gitlab.com/gitlab-org/gitlab/-/issues/223283


generate-analysis-report:
  stage: analysis
  image: golang:1.20
  services:
    - docker:23.0.6-dind
  variables:
    SEMGREP_BASELINE_IMAGE: registry.gitlab.com/gitlab-org/security-products/analyzers/semgrep:latest
    SEMGREP_TARGET_IMAGE: $CI_REGISTRY_IMAGE/tmp:$CI_COMMIT_SHA$IMAGE_TAG_SUFFIX
    HUSH_GIT_URL: https://gitlab.com/gitlab-org/secure/pocs/hush.git
  script:
    - docker run --rm  -v "$PWD:/src" -e CI_PROJECT_DIR=/src $SEMGREP_BASELINE_IMAGE /analyzer run
    - mv gl-sast-report.json gl-sast-report-baseline.json
    - docker run --rm  -v "$PWD:/src" -e CI_PROJECT_DIR=/src $SEMGREP_TARGET_IMAGE /analyzer run
    - mv gl-sast-report.json gl-sast-report-target.json
    - git clone https://gitlab.com/gitlab-org/secure/pocs/hush.git hush
    - cd hush && make analyze
    - ./analyze gl-secure --baseline-report-path "gl-sast-report-baseline.json" --target-report-path "gl-sast-report-target.json"
  needs:
    - build tmp image
  artifacts:
    expose_as: Scan Reports
    paths:
      - scan-reports/
  rules:
    - when: manual
