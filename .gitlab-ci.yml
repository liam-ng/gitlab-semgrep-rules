variables:
  REPORT_FILENAME: gl-sast-report.json
  MAX_IMAGE_SIZE_MB: 200
  MAX_IMAGE_SIZE_MB_FIPS: 1090
  SAST_EXCLUDED_ANALYZERS: "bandit,eslint,semgrep"
  SAST_EXCLUDED_PATHS: "qa, spec, test, tests, tmp, testdata"
  SEARCH_MAX_DEPTH: 20

include:
  - remote: https://gitlab.com/gitlab-org/security-products/ci-templates/raw/master/includes-dev/analyzer.yml

semgrep-rules-test:
  stage: test
  image: $CI_REGISTRY_IMAGE/tmp:$CI_COMMIT_SHA # TMP_IMAGE
  script: cd semgrep_rules_check && ./run_check.sh
  artifacts:
    paths:
      - ./semgrep_rules_check/received.json

semgrep-meta-rules:
  stage: test
  image: returntocorp/semgrep-agent:v1
  script: semgrep-agent --config p/semgrep-rule-lints
  allow_failure: true

integration-test:
  image:
    name: registry.gitlab.com/gitlab-org/security-products/analyzers/integration-test:stable
  services:
    - docker:20.10-dind
  variables:
    TMP_IMAGE: $CI_REGISTRY_IMAGE/tmp:$CI_COMMIT_SHA$IMAGE_TAG_SUFFIX
  script:
    - rspec -f d

integration-test-fips:
  extends: integration-test
  variables:
    IMAGE_TAG_SUFFIX: "-fips"
    PRIVILEGED: 'true'

.qa-downstream-sast:
  variables:
    DS_DEFAULT_ANALYZERS: ""
    SAST_EXCLUDED_ANALYZERS: "bandit,eslint"
    SAST_EXCLUDED_PATHS: "" # TEMP: until https://gitlab.com/gitlab-org/gitlab/-/issues/223283

js-qa:
  extends: .qa-downstream-sast
  variables:
    SAST_REPORT_URL: "$CI_PROJECT_URL/raw/$CI_COMMIT_REF_NAME/qa/expect/js/gl-sast-report.json"
    SAST_EXCLUDED_ANALYZERS: "nodejs-scan"
  trigger:
    project: gitlab-org/security-products/tests/js
    branch: jsx-FREEZE

csharp-dotnetcore-multiproject-qa:
  extends: .qa-downstream-sast
  variables:
    SAST_REPORT_URL: "$CI_PROJECT_URL/raw/$CI_COMMIT_REF_NAME/qa/expect/csharp-dotnetcore-multiproject/gl-sast-report.json"
  trigger:
    project: gitlab-org/security-products/tests/csharp-dotnetcore-multiproject

csharp-dotnetcore-multisolution-qa:
  extends: .qa-downstream-sast
  variables:
    SAST_REPORT_URL: "$CI_PROJECT_URL/raw/$CI_COMMIT_REF_NAME/qa/expect/csharp-dotnetcore-multisolution/gl-sast-report.json"
  trigger:
    project: gitlab-org/security-products/tests/csharp-dotnetcore-multiproject
    branch: multisolution-FREEZE

# Commenting out this until we add `.cs` to this list: https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/SAST.gitlab-ci.yml#L254-263
# csharp-dotnetcore-msbuild-multiproject-qa:
#   extends: .qa-downstream-sast
#   variables:
#     SAST_REPORT_URL: "$CI_PROJECT_URL/raw/$CI_COMMIT_REF_NAME/qa/expect/csharp-dotnetcore-multiproject/multisolution-msbuild/gl-sast-report.json"
#   trigger:
#     project: gitlab-org/security-products/tests/csharp-dotnetcore-multiproject
#     branch: multisolution-msbuild-FREEZE
